management.security.enabled=false
endpoints.health.sensitive=true
endpoints.info.sensitive=true
info.app.name=schedule-server
info.app.version=@project.version@
info.app.description=@project.description@
spring.application.name=schedule-server

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

management.port=${ScmMath.addInt(server.port, 1)}

spring.zipkin.enabled=false
spring.zipkin.baseUrl=http://localhost:7000

spring.cloud.loadbalancer.retry.enabled=true

# ribbon
ribbon.MaxAutoRetries=0
ribbon.MaxAutoRetriesNextServer=2
ribbon.OkToRetryOnAllOperations=false
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=30000

# tomcat
server.tomcat.min-spare-threads=30
server.tomcat.max-threads=400

# hystrix
hystrix.command.default.execution.timeout.enabled=false
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=130000
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=${server.tomcat.max-threads}

# circuitBreaker
hystrix.command.default.circuitBreaker.enabled=true
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000

eureka.instance.metadata-map.region=${eureka.client.region}
eureka.instance.metadata-map.version=${info.app.version}
eureka.instance.metadata-map.actuatorSecurityEnabled=${management.security.enabled}
eureka.instance.health-check-url-path=/internal/v1/health

#Time that connectors wait for another HTTP request before closing the connection:30 min
server.connection-timeout=1800000
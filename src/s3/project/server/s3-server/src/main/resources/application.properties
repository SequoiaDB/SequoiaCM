management.security.enabled=false
endpoints.health.sensitive=true
endpoints.info.sensitive=true
info.app.name=s3-server
info.app.version=@project.version@
info.app.description=@project.description@

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


spring.cloud.loadbalancer.retry.enabled=true

ribbon.MaxAutoRetries=0
ribbon.MaxAutoRetriesNextServer=2
ribbon.OkToRetryOnAllOperations=false
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=30000
ribbon.ServerListRefreshInterval=5000

# tomcat
server.tomcat.min-spare-threads=30
server.tomcat.max-threads=400

# hystrix
hystrix.command.default.execution.timeout.enabled=false
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=130000
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=${server.tomcat.max-threads}

# circuitBreaker
hystrix.command.default.circuitBreaker.enabled=true
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000

eureka.instance.metadata-map.region=${eureka.client.region}
eureka.instance.metadata-map.version=${info.app.version}

management.port=${ScmMath.addInt(server.port, 1)}
scm.internalActuatorController.enabled=false
scm.s3.authorization.maxTimeOffset=900000
scm.s3.authorization.sortHeaders=false
# context keepaliveTime(ms)
scm.s3.context.keepaliveTime=3600000
scm.s3.context.cleanPeriod=60000

# eureka
eureka.instance.leaseRenewalIntervalInSeconds=6
eureka.instance.leaseExpirationDurationInSeconds=10
eureka.client.registryFetchIntervalSeconds=15
eureka.instance.health-check-url-path=/internal/v1/health?action=actuator
eureka.client.prefer-same-zone-eureka=true
eureka.instance.metadata-map.isS3Server=true
eureka.instance.metadata-map.bindingSite=${scm.content-module.site}
eureka.instance.metadata-map.actuatorSecurityEnabled=${management.security.enabled}

# Specifies the number of days after initiating, unit is day
scm.s3.multipartupload.incompletelifecycle=3
# Specifies the reserve time after complete, unit is minute
scm.s3.multipartupload.completereservetime=10

# slowlog
scm.slowlog.enabled=false
scm.slowlog.allRequest=-1
scm.slowlog.allOperation=-1

# serviceTrace
spring.zipkin.enabled=true
spring.zipkin.discoveryClientEnabled=true
spring.zipkin.baseUrl=http://service-trace
spring.sleuth.web.enabled=${spring.zipkin.enabled}
spring.sleuth.scheduled.enabled=false
spring.sleuth.async.enabled=false
spring.sleuth.hystrix.strategy.enabled=false
spring.sleuth.rxjava.schedulers.hook.enabled=false

#set ShutdownEnabledTimer log level to warn
logging.level.com.netflix.util.concurrent.ShutdownEnabledTimer=WARN
management.security.enabled=false
endpoints.health.sensitive=true
endpoints.info.sensitive=true
info.app.name=@project.name@
info.app.version=@project.version@
info.app.description=@project.description@
spring.application.name=content-server

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

management.port=${ScmMath.addInt(server.port, 1)}


#Time that connectors wait for another HTTP request before closing the connection:30 min
server.connection-timeout=1800000

# eureka
eureka.instance.leaseRenewalIntervalInSeconds=6
eureka.instance.leaseExpirationDurationInSeconds=10
eureka.client.registryFetchIntervalSeconds=15
eureka.instance.metadata-map.region=${eureka.client.region}
eureka.instance.metadata-map.version=${info.app.version}
eureka.instance.metadata-map.actuatorSecurityEnabled=${management.security.enabled}
eureka.instance.health-check-url-path=/internal/v1/health
eureka.instance.metadata-map.isContentServer=true

scm.cephs3.detectClient.socketTimeout=5000
scm.cephs3.detectClient.maxConns=1
scm.cephs3.detectClient.connTimeout=5000
scm.cephs3.detectClient.maxErrorRetry=1

#hystrix timeout = (ribbon.ConnectTimeout + ribbon.ReadTimeout) * (1 + ribbon.MaxAutoRetries) * (1 + ribbon.MaxAutoRetriesNextServer)
ribbon.MaxAutoRetries=0
ribbon.MaxAutoRetriesNextServer=2
ribbon.OkToRetryOnAllOperations=false
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=30000
ribbon.ServerListRefreshInterval=5000

# tomcat
server.tomcat.min-spare-threads=30
server.tomcat.max-threads=400
server.tomcat.basedir=${pwd}/../tmp/tomcat.${server.port}

# hystrix
hystrix.command.default.execution.timeout.enabled=false
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=130000
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=${server.tomcat.max-threads}

# circuitBreaker
hystrix.command.default.circuitBreaker.enabled=true
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000


# slowlog
scm.slowlog.enabled=false
scm.slowlog.allRequest=-1
scm.slowlog.allOperation=-1

# serviceTrace
spring.zipkin.enabled=true
spring.zipkin.discoveryClientEnabled=true
spring.zipkin.baseUrl=http://service-trace
spring.sleuth.web.enabled=${spring.zipkin.enabled}
spring.sleuth.scheduled.enabled=false
spring.sleuth.async.enabled=false
spring.sleuth.hystrix.strategy.enabled=false
spring.sleuth.rxjava.schedulers.hook.enabled=false

#set ShutdownEnabledTimer log level to warn
logging.level.com.netflix.util.concurrent.ShutdownEnabledTimer=WARN

# set sequoiadb driver dataSource log level to warn
logging.level.com.sequoiadb.datasource.SequoiadbDatasource=WARN
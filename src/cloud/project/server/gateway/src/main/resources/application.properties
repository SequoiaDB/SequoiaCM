info.app.name=gateway
info.app.version=@project.version@
info.app.description=@project.description@
spring.application.name=gateway

server.port=8080
management.port=${ScmMath.addInt(server.port, 1)}

management.security.enabled=false
endpoints.health.sensitive=true
endpoints.info.sensitive=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

zuul.sensitive-headers=
zuul.addHostHeader=true
zuul.ribbon.eagerLoad.enabled=true

zuul.retryable=true
spring.cloud.loadbalancer.retry.enabled=true

#ribbon timeout = (ribbon.ConnectTimeout + ribbon.ReadTimeout) * (1 + ribbon.MaxAutoRetries) * (1 + ribbon.MaxAutoRetriesNextServer) 
ribbon.MaxAutoRetries=0
ribbon.MaxAutoRetriesNextServer=2
ribbon.OkToRetryOnAllOperations=false
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=30000
ribbon.ServerListRefreshInterval=5000

# tomcat
server.tomcat.min-spare-threads=30
server.tomcat.max-threads=400

# hystrix
hystrix.command.default.execution.timeout.enabled=false
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1801000
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=${server.tomcat.max-threads}
hystrix.command.default.fallback.enabled=false

# circuitBreaker
hystrix.command.default.circuitBreaker.enabled=true
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000

zuul.host.socket-timeout-millis=10000
zuul.host.connect-timeout-millis=10000
zuul.host.maxTotalConnections=500
zuul.semaphore.max-semaphores=${hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests}

zuul.ignoredPatterns=/zuul/**
zuul.ignoredPatterns=/s3/**
zuul.ignored-services=auth-server


zuul.routes.login.path=/login
zuul.routes.login.serviceId=auth-server

zuul.routes.v2Login.path=/v2/localLogin
zuul.routes.v2Login.serviceId=auth-server

zuul.routes.logout.path=/logout
zuul.routes.logout.serviceId=auth-server

zuul.routes.auth.path=/auth/**
zuul.routes.auth.serviceId=auth-server



spring.http.multipart.maxFileSize=4096Mb
spring.http.multipart.maxRequestSize=4096Mb
spring.http.multipart.fileSizeThreshold=1Mb

#Time that connectors wait for another HTTP request before closing the connection:30 min
server.connection-timeout=1800000

#ScmSendResponseFilter ScmSendErrorFilter is the replacement for it
zuul.SendResponseFilter.post.disable=true
zuul.SendErrorFilter.error.disable=true
#disable ScmAuthFromHeaderFilter, use ScmAuthenticationFilter
scm.authFilter.headerFirst=false

# eureka
eureka.instance.leaseRenewalIntervalInSeconds=6
eureka.instance.leaseExpirationDurationInSeconds=10
eureka.client.registryFetchIntervalSeconds=15
eureka.instance.metadata-map.region=${eureka.client.region}
eureka.instance.metadata-map.version=${info.app.version}
eureka.instance.metadata-map.actuatorSecurityEnabled=${management.security.enabled}
eureka.instance.health-check-url-path=/internal/v1/health

zuul.servletPath=/oldzuul
# slowlog
scm.slowlog.enabled=false
scm.slowlog.allRequest=-1
scm.slowlog.allOperation=-1

# serviceTrace
spring.zipkin.enabled=true
spring.zipkin.discoveryClientEnabled=true
spring.zipkin.baseUrl=http://service-trace
spring.sleuth.web.enabled=${spring.zipkin.enabled}
spring.sleuth.zuul.enabled=${spring.zipkin.enabled}
spring.sleuth.scheduled.enabled=false
spring.sleuth.async.enabled=false
spring.sleuth.hystrix.strategy.enabled=false
spring.sleuth.rxjava.schedulers.hook.enabled=false

#set ShutdownEnabledTimer log level to warn
logging.level.com.netflix.util.concurrent.ShutdownEnabledTimer=WARN
